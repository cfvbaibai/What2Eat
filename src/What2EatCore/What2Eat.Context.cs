//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cfvbaibai.What2Eat.Core
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class What2EatEntities : DbContext
    {
        public What2EatEntities()
            : base("name=What2EatEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Dish> Dishes { get; set; }
        public virtual DbSet<DishType> DishTypes { get; set; }
        public virtual DbSet<Meal> Meals { get; set; }
        public virtual DbSet<MealType> MealTypes { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<DishDetail> DishDetails { get; set; }
        public virtual DbSet<MealDetail> MealDetails { get; set; }
    
        public virtual int AddDish_1(string name, Nullable<short> type)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDish_1", nameParameter, typeParameter);
        }
    
        public virtual int AddMeal_1(string userId, Nullable<System.DateTime> mealDate, Nullable<byte> mealTypeId, string dishName)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var mealDateParameter = mealDate.HasValue ?
                new ObjectParameter("MealDate", mealDate) :
                new ObjectParameter("MealDate", typeof(System.DateTime));
    
            var mealTypeIdParameter = mealTypeId.HasValue ?
                new ObjectParameter("MealTypeId", mealTypeId) :
                new ObjectParameter("MealTypeId", typeof(byte));
    
            var dishNameParameter = dishName != null ?
                new ObjectParameter("DishName", dishName) :
                new ObjectParameter("DishName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMeal_1", userIdParameter, mealDateParameter, mealTypeIdParameter, dishNameParameter);
        }
    }
}
